name: Build kernel 6.6
on:
   workflow_dispatch:
jobs:
    build:
        name: kernel 6.6
        runs-on: ubuntu-24.04-arm
        steps:
            - name: Setup Ubuntu
              run: |
                sudo apt update
                sudo apt install -y subversion build-essential gettext 2to3 python3-pyelftools python3-distutils-extra
            - name: Setup Go
              uses: actions/setup-go@v5
              with:
                go-version: '1.23.5'
            - name: checkout
              uses: actions/checkout@v4
            - name: Refresh Kernel
              run: |
                git clone https://github.com/openwrt/openwrt.git
                cd openwrt
                cp .github/workflows/kernel-6.6.patch openwrt/
                ./scripts/feeds update -a
                ./scripts/feeds install -a
                git apply kernel-6.6.patch
                rm -f .config
                rm -rf tmp
                cp .github/workflows/apm821xx .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/armsr .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/at91 .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/ath79 .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/bcm27xx .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/bcm47xx .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/bcm4908 .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/bcm53xx .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/bmips .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/d1 .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/gemini .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/imx .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/ipq40xx .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/ipq806x .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/ixp4xx .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/kirkwood .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/lantiq .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/layerscape .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/loongarch64 .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/malta .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/mediatek .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/mpc85xx .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/mvebu .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/mxs .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/octeon .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/omap .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/pistachio .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/ .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/ .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/qoriq .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/qualcommax .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/ramips .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/realtek .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/rockchip .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/sifiveu .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/siflower .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/starfive .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/stm32 .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/sunxi .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/tegra .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/x86 .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                rm -f .config
                rm -rf tmp
                cp .github/workflows/zynq .config
                make defconfig
                make target/linux/{clean,refresh} -j$(nproc) || true
                git diff > k-6.6.patch
                tar -czvf logs.tar.gz logs
                echo "D=$(date +'%Y.%m.%d')" >> $GITHUB_ENV
            - name: Delete tag
              uses: ClementTsang/delete-tag-and-release@v0.4.0
              with:
                delete_release: true
                tag_name: kernel-6.6
              env:
                 GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Create release
              uses: ncipollo/release-action@v1.14.0
              with:
                allowUpdates: true
                name: Kernel 6.6 ${{ env.D }}
                tag: kernel-6.6
                replacesArtifacts: true
                makeLatest: true
                token: "${{ secrets.GITHUB_TOKEN }}"
                artifacts: |
                          openwrt/k-6.6.patch
                          openwrt/logs.tar.gz
